version: '3.9'

services:
  backend:
    container_name: assistants-server
    build:
      context: ./src
      dockerfile: Dockerfile
    environment:
      SCHEDULE_API_URL: ${DATABASE_NAME}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_PORT: ${DATABASE_PORT}
      VK_API_KEY: ${VK_API_KEY}
    depends_on:
      - database
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.rule=Host(`assistants.mirea.ninja`)
      - traefik.http.routers.backend.tls=true
      - traefik.http.routers.backend.tls.certresolver=ninjaresolver


  proxy:
    container_name: assistants-proxy
    image: traefik:latest
    ports:
      - 80:80
      - 443:443
    environment:
      DO_AUTH_TOKEN:  ${DO_AUTH_TOKEN}
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/etc/traefik


  database:
    container_name: assistants-database
    image: postgres:12.2-alpine
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    volumes:
      - voice-assistants-postgres-db:/var/lib/postgresql
    restart: always
    

volumes:
  voice-assistants-postgres-db:

# networks:
#   default:
#     external: 
#       name: traefik